#!/usr/bin/env node

var path = require('path')
  , mongo = require('mongojs')
  , mkdirp = require('mkdirp').sync
  , fs = require('fs')
  , Batch = require('batch')
  , spawn = require('child_process').spawn
  , exec = require('child_process').exec
  , chown = require('fs').chownSync

var exit = process.exit;
var basename = path.basename;
var exists = fs.existsSync;

var cwd = process.cwd();
var argv = process.argv; argv.shift();

var repo = argv[1];
var commit = argv[2];
var user = argv[3];
var key = argv[4];


var tasks = new Batch().concurrency(1);

var dest = '/home/spotlet/.spotlets/'+ basename(cwd).replace('.git','');
var name = basename(dest);
var db = mongo('spotlets', ['ports', 'spotlets']);
var port = null;
var cid = null;

function echeck (err) {
  if (err) {
    console.error(err);
    exit(1);
  }
}

tasks.push(function (next) {
  return next();
  exec('rm -rf '+ dest +'/*', function (err) {
    echeck(err);
    next();
  });
});

tasks.push(function (next) {
  var args = ['-xf', '-', '-C', dest];
  mkdirp(dest);
  var tar = spawn('tar', args, {
    stdio: [process.stdin, 'pipe', 'pipe']
  });
  tar.on('error', echeck);
  tar.on('close', next);
});

if (!exists(dest)) {

  tasks.push(function (next) {
    db.ports
    .find({$where: 'true != this.active'})
    .sort({_id: -1}, function (err, res) {
      echeck(err);
      port = res[0].port;
      next();
    });
  });

  tasks.push(function (next) {
    db.ports.update({port: port}, {active: true}, function (err) {
      echeck(err);
      next();
    });
  });

  tasks.push(function (next) {
    var up = {port: port, name: name, path: dest, keys: [key]};
    db.spotlets.update({name: name}, up, {upsert: true}, function (err) {
      echeck(err);
      next();
    });
  });
} else {
  tasks.push(function (next) {
    db.spotlets.findOne({name: name}, function (err, spotlet) {
      echeck(err);
      port = spotlet.port;
      next();
    });
  });
}

tasks.push(function mount (next) {
  var cmd = 'spotlet-mq-client';
  var input = 'mount '+ dest +' -p '+ port +':6889';
  var child = spawn(cmd);
  child.stdin.write(input);
  child.on('error', echeck);
  child.stdout.on('data', function (chunk) {
    cid = String(chunk);
  });

  child.on('close', function () {
    next();
  });
});

tasks.end(function (err) {
  echeck(err);
  console.log();
  console.log("====================");
  console.log("port=%d", port);
  console.log("cid=%s", cid);
  console.log("====================");
  console.log();
  console.log("Hostname: %s.spotlet.io", name);
  console.log();
  exit(0)
});

