#!/bin/bash

set -o pipefail

## environment
export PREFIX="${PREFIX:-/usr/local}"
export SPOTLET="${SPOTLET:-${PREFIX}/spotlet}"
export SERVICE="${SERVICE:-${SPOTLET}/service}"
export APP="${APP:-${SERVICE}/app}"

## update path
export PATH="${SPOTLET}/bin:${SERVICE}/bin:${PATH}"

## return codes
export ERROR=10
export NEEDS_COMPILE=11

## setup bin in path
setup () {
  export PATH="${SPOTLET}/bin:${PATH}"
  {
    pushd .
    cd $(dirname ${BASH_SOURCE[0]})
    install $(ls) ${PREFIX}/bin
    popd
  } > /dev/null 2>&1

  mkdir -p ${SERVICE} > /dev/null 2>&1
  mkdir -p ${APP} > /dev/null 2>&1

  return $?
}

## ensure file exists
ensure () {
  local arg="${1}";
  local file="${2}";
  debug "ensure \`$file'"
  if ! test "${arg}" "${file}"; then
    echo >&2 "error: Missing ${file}"
    exit 1
  fi
}

## run a spin process
spin-cmd () {
  local spin="${1}"; shift
  local cmd="${1}"; shift
  echo "${spin}: $cmd"
  ensure -f "${APP}/spins/${spin}/${cmd}"
  ("${APP}/spins/${spin}/${cmd}" "${@}")
  return $?
}

## main function
spotlet () {
  local rc=0
  local spins=()

  ## setup state
  setup

  ## common lib
  source $(which spotlet-mount-common)

  ## ensures dependencies structure exists
  ensure -d "${PREFIX}"
  ensure -d "${PREFIX}"
  ensure -d "${SPOTLET}"
  ensure -d "${SERVICE}"
  ensure -d "${APP}"

  if test -d ${APP}/spins; then
    spins+=($( ls ${APP}/spins ))

    for spin in ${spins[@]}; do
      info "Building spin \`${spin}'"

      ## feature detect and determine if
      ## compilation is needed
      (spin-cmd ${spin} 'detect')
      rc=$?
      if [ "${rc}" == "${ERROR}" ]; then
        return ${rc}
      elif [ "${rc}" == "${NEEDS_COMPILE}" ]; then
        (spin-cmd ${spin} 'compile')
        if [ "${rc}" == "${ERROR}" ]; then
          return ${rc}
        fi
      fi

      ## run tests
      (spin-cmd ${spin} 'test')
      rc=$?
      if [ "${rc}" == "${ERROR}" ]; then
        return ${rc}
      fi

      if (( ${rc} > 0 && ${rc} < 10 )); then
        return ${rc}
      fi
    done
  fi

  ## run
  if test -f "${APP}/start"; then
    info "Starting application..."
    {
      pushd . > /dev/null 2>&1
      cd ${APP}
      "./start" &
      trap "kill -9 $! && exit 1" SIGTERM SIGINT
      wait
    }
  fi

  return $?
}

## run
(spotlet "${@}")
exit $?

